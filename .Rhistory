#| label: plot-penguins
#| warning: false
#| echo: false
ggplot(penguins,
aes(x = flipper_length_mm, y = bill_length_mm)) +
geom_point(aes(color = species, shape = species)) +
scale_color_manual(values = c("darkorange","purple","cyan4")) +
labs(
title = "Flipper and bill length",
subtitle = "Dimensions for penguins at Palmer Station LTER",
x = "Flipper length (mm)", y = "Bill length (mm)",
color = "Penguin species", shape = "Penguin species"
) +
theme_minimal()
install.packages("gapminder")
library(gapminder)
str(gapminder)
## see? it's still a regular data frame, but also a tibble
class(gapminder)
gapminder
head(gapminder)
tail(gapminder)
as_tibble(iris)
library(tidyverse)
head(gapminder)
tail(gapminder)
as_tibble(iris)
names(gapminder)
ncol(gapminder)
length(gapminder)
dim(gapminder)
nrow(gapminder)
summary(gapminder)
plot(lifeExp ~ year, gapminder)
plot(lifeExp ~ gdpPercap, gapminder)
plot(lifeExp ~ log(gdpPercap), gapminder)
str(gapminder)
head(gapminder$lifeExp)
summary(gapminder$lifeExp)
hist(gapminder$lifeExp)
summary(gapminder$year)
table(gapminder$year)
class(gapminder$continent)
summary(gapminder$continent)
levels(gapminder$continent)
nlevels(gapminder$continent)
str(gapminder$continent)
table(gapminder$continent)
barplot(table(gapminder$continent))
## we exploit the fact that ggplot2 was installed and loaded via the tidyverse
p <- ggplot(filter(gapminder, continent != "Oceania"),
aes(x = gdpPercap, y = lifeExp)) # just initializes
p <- p + scale_x_log10() # log the x axis the right way
p + geom_point() # scatterplot
p + geom_point(aes(color = continent)) # map continent to color
p + geom_point(alpha = (1/3), size = 3) + geom_smooth(lwd = 3, se = FALSE)
p + geom_point(alpha = (1/3), size = 3) + facet_wrap(~ continent) +
geom_smooth(lwd = 1.5, se = FALSE)
source("common.R")
class(gapminder)
as_tibble(iris)
(canada <- gapminder[241:252, ])
filter(gapminder, lifeExp < 29)
filter(gapminder, country == "Rwanda", year > 1979)
filter(gapminder, country %in% c("Rwanda", "Afghanistan"))
excerpt <- gapminder[241:252, ]
filter(gapminder, country == "Canada")
gapminder %>% head()
gapminder %>% head(3)
gapminder %>%
select(year, lifeExp) %>%
head(4)
gapminder %>%
filter(country == "Cambodia") %>%
select(year, lifeExp)
gapminder[gapminder$country == "Cambodia", c("year", "lifeExp")]
library(tidyverse)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = <DATA>) +
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_point(data = dplyr::filter(mpg, displ > 5, hwy > 20), colour = "red", size = 2.2)
ggplot() +
geom_point(aes(1, 1), size = 20) +
geom_point(aes(2, 1), size = 10) +
geom_point(aes(3, 1), size = 20, shape = 17) +
geom_point(aes(4, 1), size = 20, colour = "blue") +
scale_x_continuous(NULL, limits = c(0.5, 4.5), labels = NULL) +
scale_y_continuous(NULL, limits = c(0.9, 1.1), labels = NULL) +
theme(aspect.ratio = 1/3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
shapes <- tibble(
shape = c(0, 1, 2, 5, 3, 4, 6:19, 22, 21, 24, 23, 20),
x = (0:24 %/% 5) / 2,
y = (-(0:24 %% 5)) / 4
)
ggplot(shapes, aes(x, y)) +
geom_point(aes(shape = shape), size = 5, fill = "red") +
geom_text(aes(label = shape), hjust = 0, nudge_x = 0.15) +
scale_shape_identity() +
expand_limits(x = 4.1) +
scale_x_continuous(NULL, breaks = NULL) +
scale_y_continuous(NULL, breaks = NULL, limits = c(-1.2, 0.2)) +
theme_minimal() +
theme(aspect.ratio = 1/2.75)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
library(tableone) # for matching comparison
library(MatchIt) # propensity score mathcing with plots
library(Matching) # carries out the matching
library(gtools)
library(readr)
rhc <- read_csv("rhc.csv")
rhc <- read_csv("C:\\Users\\olini\\coursera\\causal infer\\crash-course-in-causality\\03_matching-and-propensity-scores\\02_propensity-scoresrhc.csv")
rhc <- read_csv("C:\\Users\\olini\\coursera\\causal infer\\crash-course-in-causality\\03_matching-and-propensity-scores\\02_propensity-scores\\rhc.csv")
# viewing the data
View(rhc)
ARF <- as.numeric(rhc$cat1=='ARF')
CHF <- as.numeric(rhc$cat1=='CHF')
Cirr <- as.numeric(rhc$cat1=='Cirrhosis')
colcan <- as.numeric(rhc$cat1 =='Colon Cancer')
Coma <- as.numeric(rhc$cat1=='Coma')
COPD <- as.numeric(rhc$cat1=='COPD')
lungcan <- as.numeric(rhc$cat1=='Lung Cancer')
MOSF <- as.numeric(rhc$cat1=='MOSF w/Malignancy')
sepsis <- as.numeric(rhc$cat1=='MOSF w/Sepsis')
female <- as.numeric(rhc$sex=='Female')
died <- as.numeric(rhc$death=='Yes')
age<-rhc$age
treatment <- as.numeric(rhc$swang1=='RHC')
meanbp1 <- rhc$meanbp1
aps <- rhc$aps1
mydata <- cbind(ARF, CHF, Cirr, colcan, lungcan,
MOSF, sepsis, age, female, treatment,
died,aps)
mydata <-data.frame(mydata)
View(mydata)
psmodel <- glm(treatment~ARF+CHF+Cirr+colcan+Coma+lungcan+
MOSF+sepsis+age+female+meanbp1+aps,
family = binomial(), data=mydata) # binomial informs using logistic regression
# show coeficients
summary(psmodel)
# create propensity score
pscore <- psmodel$fitted.values
m.out <- matchit(treatment~ARF+CHF+Cirr+colcan+Coma+lungcan+
MOSF+sepsis+age+female+meanbp1+aps,
data=mydata,
method='nearest')
summary(m.out)
